@startuml consume

partition Consume {
  start
  : Call **Provider** Executor;
  if (Error?) then (yes)
    (C)
    detach
  else (no)
    : Provider.prime(): Primer;
    if (Error?) then (yes)
      (A)
      detach
      ' Provider Termination
      (A)
      : Provider.close(): void;
      (C)
      detach
      ' Capture
      (C)
      if (Consumer.close exists?) then (yes)
        : Consumer.close(error: Error): void;
        if (Error?) then (yes)
          : **Reject** StreamBroker;
        else (no)
          : **Resolve** StreamBroker;
        endif
      else (no)
        : **Reject** StreamBroker;
      endif
      stop
      ' / Capture
      ' / Provider Termination
    else (no)
      : Consumer.prime(primer: Primer): void | boolean;
      if (Error) then (yes)
        (B)
        detach
        ' Consumer Termination
        (B)
        : Provider.close(): void;
        if (Error?) then (yes)
          : Consumer.close(error: Error): void;
        else (no)
          : Consumer.close(): void;
        endif
        : **Reject** StreamBroker;
        stop
        ' / Consumer Termination
      else (no)
        if (Done, returns **true**?) then (yes)
          (F)
          detach
          ' Finalization
          (F)
          : Provider.close(): void;
          if (Error?) then (yes)
            (C)
          else (no)
            : Consumer.close(): void;
            if (Error?) then (yes)
              : **Reject** StreamBroker;
            else (no)
              : **Resolve** StreamBroker;
            endif
          endif
          stop
          ' / Finalization
        else (no)
          : Queue **Asynchronous** Process **[P]**;
          : Return **StreamBroker**;
          (P)
          detach
          ' Process
          (P)
          if (Externally cancelled?) then (yes)
            stop
          else (no)
            if (Provider.data exists?) then (yes)
              : Provider.data(): StreamResponse<T>;
              if (Externally cancelled?) then (yes)
                stop
              else (no)
                if (Error?) then (yes)
                  (A)
                  detach
                else (no)
                  if (Done, returns **{ done: true }**?) then (yes)
                    : Consumer.data(value: T): StreamResolve<void | boolean>;
                    if (Externally cancelled?) then (yes)
                      stop
                    else (no)
                      if (Error?) then (yes)
                        (B)
                        detach
                      else (no)
                        if (Done, returns **true**?) then (yes)
                          (F)
                          detach
                        else (no)
                          (P)
                          detach
                        endif
                      endif
                    endif
                  else (no)
                    (F)
                    detach
                  endif
                endif
              endif
            else (no)
              (F)
              detach
            endif
          endif
          ' / Process
        endif
      endif
    endif
  endif
}

partition "External Cancellation" {
  start
  : Broker.cancel();
  if (Done?) then (yes)
    stop
  else (no)
    (F)
    detach
  endif
}

@enduml